# Generated by Django 5.1.8 on 2025-05-01 02:51

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Matiere",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("date_naissance", models.DateField(blank=True, null=True)),
                (
                    "nationalite",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "photo_de_profil",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_photos/"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("admin", "Admin"),
                            ("teacher", "Teacher"),
                            ("student", "Student"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Ecole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(max_length=255)),
                ("adresse", models.CharField(blank=True, max_length=255, null=True)),
                ("ville", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "directeur",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"role": "admin"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="ecoles_dirigees",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Classe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "niveau",
                    models.CharField(
                        choices=[
                            ("T", "Terminale"),
                            ("P", "Premi√®re"),
                            ("S", "Seconde"),
                        ],
                        default="S",
                        max_length=1,
                        verbose_name="Niveau",
                    ),
                ),
                ("nom", models.CharField(max_length=255)),
                (
                    "ecole",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="classes",
                        to="swotify.ecole",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Eleve",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(max_length=100)),
                ("prenom", models.CharField(max_length=100)),
                ("sexe", models.CharField(max_length=10)),
                ("date_naissance", models.DateField()),
                ("lieu_naissance", models.CharField(max_length=100)),
                ("adresse", models.CharField(max_length=255)),
                ("telephone_parent", models.CharField(max_length=20)),
                ("date_inscription", models.DateField(auto_now_add=True)),
                ("nationalite", models.CharField(max_length=100)),
                (
                    "photo_profile",
                    models.ImageField(
                        blank=True, null=True, upload_to="photos/%Y/%m/%d/"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "classe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="eleves",
                        to="swotify.classe",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        limit_choices_to={"role": "student"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Comportement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("observation", models.TextField()),
                (
                    "eleve",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="comportements",
                        to="swotify.eleve",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Enseignant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("specialite", models.CharField(blank=True, max_length=255, null=True)),
                ("date_recrutement", models.DateField(blank=True, null=True)),
                (
                    "ecole",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="swotify.ecole",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        limit_choices_to={"role": "teacher"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EnseignantMatiere",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "classe",
                    models.ForeignKey(
                        default=1,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="swotify.classe",
                    ),
                ),
                (
                    "enseignant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enseignant_matieres",
                        to="swotify.enseignant",
                    ),
                ),
                (
                    "matiere",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="matieres_enseignes",
                        to="swotify.matiere",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Absence",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("justification", models.TextField(blank=True, null=True)),
                ("type_seance", models.CharField(max_length=20)),
                ("nombre_heures", models.IntegerField()),
                (
                    "classe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="swotify.classe"
                    ),
                ),
                (
                    "eleve",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="absences",
                        to="swotify.eleve",
                    ),
                ),
                (
                    "enseignant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="swotify.enseignant",
                    ),
                ),
                (
                    "matiere",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="swotify.matiere",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                ("date_envoi", models.DateTimeField(auto_now_add=True)),
                (
                    "eleve",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="messages",
                        to="swotify.eleve",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Note",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("valeur", models.DecimalField(decimal_places=2, max_digits=5)),
                (
                    "trimestre",
                    models.IntegerField(
                        choices=[
                            (1, "Premier trimestre"),
                            (2, "Deuxi√®me trimestre"),
                            (3, "Troisi√®me trimestre"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "type_note",
                    models.CharField(
                        choices=[("controle", "Contr√¥le"), ("examens", "Examens")],
                        default="controle",
                        max_length=20,
                    ),
                ),
                ("date_note", models.DateField(auto_now_add=True)),
                (
                    "eleve",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="swotify.eleve"
                    ),
                ),
                (
                    "matiere",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="swotify.matiere",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                ("date_creation", models.DateTimeField(auto_now_add=True)),
                ("lu", models.BooleanField(default=False)),
                (
                    "priorite",
                    models.CharField(
                        choices=[
                            ("haute", "Haute"),
                            ("moyenne", "Moyenne"),
                            ("basse", "Basse"),
                        ],
                        default="moyenne",
                        max_length=10,
                    ),
                ),
                (
                    "type_notification",
                    models.CharField(
                        choices=[("alerte", "Alerte"), ("information", "Information")],
                        default="information",
                        max_length=15,
                    ),
                ),
                (
                    "eleve",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="notifications",
                        to="swotify.eleve",
                    ),
                ),
            ],
        ),
    ]
